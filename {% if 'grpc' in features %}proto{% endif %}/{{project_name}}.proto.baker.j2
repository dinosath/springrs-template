{%- macro get_proto_type(name, property, required) -%}{% filter trim -%}
    {# Define a complex map for Protobuf types with type, format, min, and max #}
    {%- set proto_map = [
        {"type": "string", "format": "uuid", "result": "string"},
        {"type": "string", "format": "date-time", "result": "google.protobuf.Timestamp"},
        {"type": "string", "format": "date", "result": "string"},
        {"type": "string", "format": "time", "result": "string"},
        {"type": "string", "format": "email", "result": "string"},
        {"type": "string", "format": "url", "result": "string"},
        {"type": "string", "result": "string"},
        {"type": "string", "enum": property.enum, "result": name|pascal_case},
        {"type": "boolean", "result": "bool"},
        {"type": "integer", "min": 0, "max": 255, "result": "uint32"},
        {"type": "integer", "min": 0, "max": 65535, "result": "uint32"},
        {"type": "integer", "min": 0, "max": 4294967295, "result": "uint32"},
        {"type": "integer", "min": None, "max": 127, "result": "int32"},
        {"type": "integer", "min": None, "max": 32767, "result": "int32"},
        {"type": "integer", "min": None, "max": 2147483647, "result": "int32"},
        {"type": "integer", "min": None, "max": None, "result": "int64"},
        {"type": "number", "min": -3.40282347, "max": 3.40282347, "result": "float"},
        {"type": "number", "min": None, "max": None, "result": "double"},
        {"type": "relationship", "format": None, "result": "int64"},
        {"type": "object", "x-relationship": "many-to-one", "result": "int32"}
    ] -%}
    {%- set type = proto_map
        | selectattr('type', 'equalto', property.type)
        | selectattr('format', 'equalto', property.format)
        | selectattr('min', 'equalto', property.min)
        | selectattr('enum', 'equalto', property.enum)
        | selectattr('max', 'equalto', property.max)
        | selectattr('x-relationship', 'equalto', property['x-relationship'])
        | map(attribute='result')
        | first
        | default('string') -%}
    {{ type }}
{%- endfilter %}{%- endmacro -%}
{# generate protobuf file #}

syntax = "proto3";

package grpc.api.{{ project_name }};

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

{% for entity_name,entity in entities | items -%}
{% if entity.properties | items %}
{% set message = entity_name | pascal_case -%}

{% for name,property in entity.properties | items | selectattr('1.enum') -%}
enum {{ name | pascal_case }} {
        {% for enum in property.enum -%}
        {{ enum }} = {{ loop.index - 1 }};
        {% endfor %}
}
{% endfor -%}

message {{ message }}Repo {
    message {{ message }} {
        uint64 ID = 1;
        google.protobuf.Timestamp createdAt = 2;
        google.protobuf.Timestamp updatedAt = 3;
        {% for name, property in entity.properties | items -%}
        {{ macros.get_proto_type(name, property, name in entity.required) }} {{ name | pascal_case }} = {{ loop.index + 3 }};
        {% endfor -%}
    }
    repeated {{ message }} {{ message | plural | snake_case }} = 1;
}

message {{ message }}UpdateRequest {
    google.protobuf.Int64Value ID = 1;
    {{ message }}Repo.{{ message }} {{ message | snake_case }} = 2;
}

service {{ message }}Service {
	rpc Create({{ message }}Repo.{{ message }}) returns ({{ message }}Repo.{{ message }});
    rpc GetList(google.protobuf.Empty) returns (stream {{ message }}Repo.{{ message }});
    rpc GetOne(google.protobuf.Int64Value) returns ({{ message }}Repo.{{ message }});
	rpc Update(UpdateRequest) returns ({{ message }}Repo.{{ message }});
	rpc Delete(google.protobuf.Int64Value) returns (google.protobuf.BoolValue);
}
---
{% endif -%}
{% endfor -%}