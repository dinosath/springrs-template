{%- import "_macros.jinja" as macros -%}

{%- macro get_input_type(name, property, required=false) -%}
{%- filter trim -%}
{%- set map = [
        {"type": "string", "format": "uuid", "result": "TextInput"},
        {"type": "string", "format": "date-time", "result": "DateTimeInput"},
        {"type": "string", "format": "date", "result": "DateInput"},
        {"type": "string", "format": "time", "result": "DateInput"},
        {"type": "string", "result": "TextInput"},
        {"type": "string", "enum": property.enum, "result": "SelectInput"},
        {"type": "number", "enum": property.enum, "result": "SelectInput"},
        {"type": "integer", "enum": property.enum, "result": "SelectInput"},
        {"type": "boolean", "result": "BooleanInput"},
        {"type": "integer", "min": 0, "max": 255, "result": "NumberInput"},
        {"type": "integer", "min": 0, "max": 65535, "result": "NumberInput"},
        {"type": "integer", "min": 0, "max": 4294967295, "result": "NumberInput"},
        {"type": "integer", "min": 0, "max": None, "result": "NumberInput"},
        {"type": "integer", "min": None, "max": 127, "result": "NumberInput"},
        {"type": "integer", "min": None, "max": 32767, "result": "NumberInput"},
        {"type": "integer", "min": None, "max": 2147483647, "result": "NumberInput"},
        {"type": "integer", "min": None, "max": None, "result": "NumberInput"},
        {"type": "number", "min": -3.40282347, "max": 3.40282347, "result": "NumberInput"},
        {"type": "number", "min": None, "max": None, "result": "NumberInput"},
        {"type": "object", "x-relationship": "many-to-one", "result": "ReferenceInput"},
        {"type": "array", "x-relationship": "one-to-many", "result": "ReferenceArrayInput"},
        {"type": "array","x-relationship": "many-to-many", "result": "ReferenceArrayInput"}
] -%}
{%- set type = map
    | selectattr('type', 'equalto', property.type)
    | selectattr('format', 'equalto', property.format)
    | selectattr('min', 'equalto', property.min)
    | selectattr('enum', 'equalto', property.enum)
    | selectattr('max', 'equalto', property.max)
    | selectattr('x-relationship', 'equalto', property['x-relationship'])
    | map(attribute='result')
    | first
    | default('TextInput')
-%}
{{ type }}
{%- endfilter -%}
{%- endmacro -%}

{%- macro get_choices(object) -%}
{%- filter trim -%}
{%- if 'enum' in object -%}
choices={[
{%- for enum in object.enum -%}{ id: '{{ enum }}', name: '{{ enum }}' }{{ ',' if not loop.last }}{%- endfor -%}]}
{% endif -%}
{%- endfilter -%}
{%- endmacro -%}

{#- Macro to get the input element for a property -#}
{%- macro get_input_element(name, property) -%}
{%- filter trim -%}
<{{ get_input_type(name, property, name in property.required) }} {{ 'readOnly' if 'readOnly' in property }} source="{{ name | camel_case }}"
{%- set is_relation = macros.relation_is_many_to_many(property)=='true' or macros.relation_is_many_to_one(property=property)=='true' -%}
{%- if is_relation -%}
{%- set relation = macros.get_relation(property) -%}
{{' '}}reference="{{ relation | plural | kebab_case }}" label="{{ relation | pascal_case }}" defaultValue={[]} {{- ' validate={[required()]}' if 'required' in entity and name in entity.required  }}/>
{% else -%}
{{- ' validate={[required()]}' if 'required' in entity and name in entity.required  }} {{ get_choices(entity) }} {{ get_choices(property) }}/>
{% endif -%}
{%- endfilter -%}
{%- endmacro -%}


